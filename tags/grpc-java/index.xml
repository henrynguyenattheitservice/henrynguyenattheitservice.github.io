<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>grpc-java on The IT Service github.io</title>
    <link>https://henrynguyenattheitservice.github.io/tags/grpc-java/</link>
    <description>Recent content in grpc-java on The IT Service github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 May 2023 12:02:32 +1000</lastBuildDate><atom:link href="https://henrynguyenattheitservice.github.io/tags/grpc-java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Grpc Skill</title>
      <link>https://henrynguyenattheitservice.github.io/posts/grpc-skill/</link>
      <pubDate>Mon, 29 May 2023 12:02:32 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/grpc-skill/</guid>
      <description>Introduction # Hi everyone!
Here are some thoughts on the solution for protobuf and gRPC:
Set the Development Environment for
Java: we start to setup the Java DevEnv to build up the confidence and know-how. The reasons are that we know Java Development come with two structures of building application MAVEN and GRADLE. We need to feel how gRPC works in the Java DevEnv. Refer to the URL link for detailed notes.</description>
    </item>
    
  </channel>
</rss>
