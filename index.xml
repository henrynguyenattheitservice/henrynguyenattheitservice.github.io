<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The IT Service github.io</title>
    <link>https://henrynguyenattheitservice.github.io/</link>
    <description>Recent content on The IT Service github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Aug 2023 09:38:49 +1000</lastBuildDate><atom:link href="https://henrynguyenattheitservice.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Land System</title>
      <link>https://henrynguyenattheitservice.github.io/posts/land-system/</link>
      <pubDate>Fri, 11 Aug 2023 09:38:49 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/land-system/</guid>
      <description>Disclaimer: The User Requirements Specification documentation is broken down into two parts to remove the unambiguous in the Requirements and the Specification:
User-requirements means the user document the requirements without any implementation intention, e.g. the user document to build a house with four windows and a door. User-specification means the user document the requirements to be implemented with specification, e.g the user document to build a house for human to live with a door specified by the manufacture and four windows specified by the manufacture.</description>
    </item>
    
    <item>
      <title>Temporal Skill</title>
      <link>https://henrynguyenattheitservice.github.io/posts/temporalskill/</link>
      <pubDate>Tue, 04 Jul 2023 18:06:01 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/temporalskill/</guid>
      <description>Introduction # Finite State Machine and/or Workflow provides the deterministic paradigm to the software application development. Temporal addresses the Workflow part of the paradigm. Hopefully Temporal also addresses the Finite State Machine part of the paradigm. Let research into the technologies to find out if one could start with:
The Workflow specification to the Temporal framework OR The Finite State Machine specification to the Temporal framework Further study into few internet pointers, It seems that TO-DO must be required to see how FSM and Temporal Workflow Temporal Cluster # At the heart of the Temporal framework is the cluster.</description>
    </item>
    
    <item>
      <title>Android application used to Commission, Provision and Diagnostic operations on the Battery meters using USB</title>
      <link>https://henrynguyenattheitservice.github.io/projects/android/usb/</link>
      <pubDate>Tue, 27 Jun 2023 09:11:16 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/android/usb/</guid>
      <description>Introduction # Developed the Local Craft Terminal application to perform automatic Commission, Provision and Diagnostic operations on the battery charging to military devices using the Android/Java to interface and interoperate with the Firmware/C via USB and Javolution (Java to C Parser and Formatter).
Project Team # Duration ~2-3 months 1 x System Architect Document requirements and specifications Provide guidance to Firmware Developers and Testers 2 x Senior Firmware Engineer was responsible Developed firmware for the digital meter using CoAP/LwM2M/IPSO Developed firmware for interface with the android 1 x Senior Software Engineer was responsible for the Proof of Concept release Set up the Development Environment for USB using Android Phone with 6 ports or 8 ports Battery Management devices Set up the Development Environment to work with raw USB device to charge and possible process data at USB Type 3/10 Mbps.</description>
    </item>
    
    <item>
      <title>AWS MQTT and Cognito</title>
      <link>https://henrynguyenattheitservice.github.io/projects/android/aws-mqtt/</link>
      <pubDate>Tue, 27 Jun 2023 09:11:16 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/android/aws-mqtt/</guid>
      <description></description>
    </item>
    
    <item>
      <title>LSI AI Scanning System</title>
      <link>https://henrynguyenattheitservice.github.io/projects/cpp/lsiscan/</link>
      <pubDate>Thu, 15 Jun 2023 14:09:12 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/cpp/lsiscan/</guid>
      <description>Introduction # Enhanced the Parcel Scanning research result for Melbourne University and Collaboration with Melbourne University Consortium, Extel Technologies and LSI. The Parcel Scanning research hypothesize into the Artificial Intelligence by training the digital scan to detect organic material to be trained to detect drugs and metal material to be trained to detect gun and explosion. The enhancement comprised of turning the research result into the commercial product including proving the result was correct with better technique</description>
    </item>
    
    <item>
      <title>Iotwithgpsandsensors</title>
      <link>https://henrynguyenattheitservice.github.io/projects/java/iotwithgpsandsensors/</link>
      <pubDate>Thu, 15 Jun 2023 09:02:26 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/java/iotwithgpsandsensors/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Sommetrics</title>
      <link>https://henrynguyenattheitservice.github.io/projects/java/sommetrics/</link>
      <pubDate>Thu, 15 Jun 2023 09:02:26 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/java/sommetrics/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Vha_ph2</title>
      <link>https://henrynguyenattheitservice.github.io/projects/java/vha_ph2/</link>
      <pubDate>Thu, 15 Jun 2023 09:02:26 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/java/vha_ph2/</guid>
      <description> Introduction # Unico-&amp;gt;CGI developed and deployed VHA to TPG to support Phase-1 Prepaid mobile service and then extend the support to Phase-2 Postpaid mobile.
Project Team # Duration ~2-3 months and 4 production releases 1 x Project Manager 1 x System Architect was responsible Document requirements and specifications Provide guidance to Developers and Testers Interact with TPG and Matrixx Expert to acquire requirements and specifications and to provide technical support to TPG 1 x Senior and 1 x Experience Java Developer was responsible the Phase-1 Prepaid development 1 x Senior Java Developer was responsible the Phase-1 Postpaid responsible for Learning the Phase-1 Prepaid solution and develop Phase-2 Postpaid solution from the Experience Java Developer Set up the Development Environment with Oracle Database running as docker Fixing defects from Phase-1 to study the Prepaid migration solution Develop the Subscriber Loader, Filter, Batch Manager and Matrixx Interface components to support the Postpaid migration 2 x Testers 1 x Functional and Integration Tester 1 x Model Support Tester / Production Support Tester Technologies # Oracle Database running using Docker # Spring Boot 2 running as a Batch Job # Red Hat Camel 2 used to transform data through various migration stages # </description>
    </item>
    
    <item>
      <title>Adsl Element Manager</title>
      <link>https://henrynguyenattheitservice.github.io/projects/java/adsl-element-manager/</link>
      <pubDate>Fri, 09 Jun 2023 13:18:19 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/java/adsl-element-manager/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Android application used to Commission, Provision and Diagnostic operations on the South East Water digital meters using NFC</title>
      <link>https://henrynguyenattheitservice.github.io/projects/android/nfc/</link>
      <pubDate>Fri, 09 Jun 2023 13:18:19 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/android/nfc/</guid>
      <description>Introduction # Developed the Local Craft Terminal application to perform Commission, Provision and Diagnostic operations on the South East Water digital meters using the Android/Java to interface and interoperate with the Firmware/C via NFC sensor and Javolution (Java to C Parser and Formatter).
Project Team # Duration ~2-3 months and 3 production releases 1 x Program Manager / 1 x Project Manager 1 x Senior Firmware Engineer was responsible Document requirements and specifications Provide guidance to Firmware Developers and Testers 2 x Senior Firmware Engineer was responsible Developed firmware for the digital meter using CoAP/LwM2M/IPSO Developed firmware for interface with the android 1 x Senior Software Engineer was responsible for 3 production releases Set up the Development Environment for NFC using Android Phone with NFC built in and NFC sensor tag Set up the Development Environment for the Android to interface with the Firmware using Javolution (open source used to format the Java to C/CPP and parse C/CPP to Java) Set up the Development Environment for the Android to engineer with Internationalisation with Locale support - UI strings, info/warns/error codes and messages are stored to values/strings Android update to date structure and releases to support latest android (I just finished reworking on the porting the sew-lct application to the latest android structure from v4/v7 to androidx at the time write this article) The User Interface and Usability was engineered with the knowledge when I worked at the Telecom Research Lab to engineer simple UI and deterministic usability to work on 5-6 inch screen, water/unclean environment and NFC only works with deterministic stable field by tapping Base Menu Ultrasonic Menu Cathodic Menu Pressure Menu Work with the Firmware Team to develop the simple protocol to transport the model for local craft terminal application the digital meter firmware.</description>
    </item>
    
    <item>
      <title>Iot Aws Service</title>
      <link>https://henrynguyenattheitservice.github.io/projects/java/iot-aws-service/</link>
      <pubDate>Fri, 09 Jun 2023 13:18:19 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/java/iot-aws-service/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Modini Project</title>
      <link>https://henrynguyenattheitservice.github.io/projects/java/modini/</link>
      <pubDate>Fri, 09 Jun 2023 13:18:19 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/java/modini/</guid>
      <description>Introduction # Unico-&amp;gt;CGI developed and deployed Modini to Telstra to support 3G and 4G Mobile services more than 10 years ago.
Recently Telstra deploy 4G-&amp;gt;5G and 5G Stand Alone Mobile services and Modini is extended to support the 4G-&amp;gt;5G and 5G Stand Alone.
The projects was planned into four releases together with fixing some critical and major defects.
Project Team # Duration ~6-8 months and 4 production releases 1 x Project Manager 1 x System Architect was responsible Document the 4G-&amp;gt;5G and 5G SA requirements and specifications Provide guidance to Developers and Testers Interact with Telstra Subject Mater Expert to acquire requirements and specifications and to provide technical support to Telstra 1 x Senior Java Developer was responsible Work with the System Architect and Testers to analyze the requirements and specifications Study the current solution from the source code and technologies in the Dev, Test and Production.</description>
    </item>
    
    <item>
      <title>Sew Leshan</title>
      <link>https://henrynguyenattheitservice.github.io/projects/java/sew-leshan/</link>
      <pubDate>Fri, 09 Jun 2023 13:18:19 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/projects/java/sew-leshan/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Commercial Projects</title>
      <link>https://henrynguyenattheitservice.github.io/posts/projects/</link>
      <pubDate>Fri, 09 Jun 2023 13:14:03 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/projects/</guid>
      <description>Introduction # Commercial projects are classified into:
Java Projects Infrastructure Projects Cloud solution Projects Java Projects # Modini for Telstra @Unico/CGI # Enhanced the existing Service Assurance Management System supporting from 3G and 4G to 5G and 5G SA mobile services using Java7/J2EE with JSF/Javarscript/Groovy for the FrontEnd and JBoss/EJB/JMS/SOAP/CLI over SSH to interface to Mediator Devices. The persistent storage is MySQL.
Mobile Prepaid and Postpaid Mobile Service Migration for TPG @Unico/CGI # Enhanced the existing Phase-1 Prepaid mobile service migration to support Postpaid as well using Java8 Batch Spring Boot v2 and Red Hat Camel v2 to interface to the Oracle database running as a docker and Matrixx using JMS.</description>
    </item>
    
    <item>
      <title>Proof Of Concept and Research Projects</title>
      <link>https://henrynguyenattheitservice.github.io/posts/pocs/</link>
      <pubDate>Fri, 09 Jun 2023 13:13:51 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/pocs/</guid>
      <description>Introduction # Here are the main categories to be developed as Proof of Concept or Research (Hypotheses/Experiments/Results)
Java/Go/Python Projects Infrastructure Projects Cloud solution Projects Finite State Machine with Xstate and Typescript, Java, Python # Research on various techniques on how to develop application suing Finite State Machine.
Finite State Machine # State machine is a concept used for designing complex system
State Machine parts are: States, Events, Initial State, Transitions, Final State.</description>
    </item>
    
    <item>
      <title>Grpc Skill</title>
      <link>https://henrynguyenattheitservice.github.io/posts/grpc-skill/</link>
      <pubDate>Mon, 29 May 2023 12:02:32 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/grpc-skill/</guid>
      <description>Introduction # Hi everyone!
Here are some thoughts on the solution for protobuf and gRPC:
Set the Development Environment for
Java: we start to setup the Java DevEnv to build up the confidence and know-how. The reasons are that we know Java Development come with two structures of building application MAVEN and GRADLE. We need to feel how gRPC works in the Java DevEnv. Refer to the URL link for detailed notes.</description>
    </item>
    
    <item>
      <title>Java Skill (draft)</title>
      <link>https://henrynguyenattheitservice.github.io/posts/java-skill/</link>
      <pubDate>Mon, 22 May 2023 13:23:42 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/java-skill/</guid>
      <description>GitHub Referece
Development Environment # The Java Development Environment is setup as follows:
We use IntelliJ IDEA as the primary Integrated Development Environment tool.
IntelliJ IDEA with Git Servers: to connect to Git Server,GitLab Server, Bitbucket and Github IntelliJ IDEA with Git: to manage Code Control - Local and Remote Git activities. IntelliJ IDEA Debug: to debug and learn everything about Golang IntelliJ IDEA Remote Debug: to remote debug to diagnose code issues and defects in the integration IntelliJ IDEA and Docker Desktop as an Integrated Development Environment: to create the development environment using Docker and Kubernetes e.</description>
    </item>
    
    <item>
      <title>leshan Application / Iot Application / Mobile Application Skill (draft)</title>
      <link>https://henrynguyenattheitservice.github.io/posts/leshanapp-iotapp-mobileapp-skill/</link>
      <pubDate>Mon, 22 May 2023 13:23:42 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/leshanapp-iotapp-mobileapp-skill/</guid>
      <description>Use Cases # Here are the summary of the solution and standards for CoAP, LwM2M and IPSO:
Solution &amp;amp; Standard to Support CoAP # Device and Protocol to work in a constraint environment – CoAP Constraint of Application Protocol Protocol operates s constraint resources, e.g. Power devices run using battery or Transmit data in an Intermittent and narrow band. CoAP protocol is a Restful-like API with Restful response code Operate in various protocol stacks, UDP/DTLS, TCP/TLS and Websocket, SMS and MQTT Message encodes/decoded and transported between devices using CBOR Concise Binary Object, Text, TLV, JSON</description>
    </item>
    
    <item>
      <title>Springboot Skill (under-construction)</title>
      <link>https://henrynguyenattheitservice.github.io/posts/springboot-skill/</link>
      <pubDate>Mon, 22 May 2023 13:23:42 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/springboot-skill/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Yocto Skill (draft)</title>
      <link>https://henrynguyenattheitservice.github.io/posts/yocto-skill/</link>
      <pubDate>Mon, 22 May 2023 13:23:42 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/yocto-skill/</guid>
      <description>Introduction # Hi everyone, here are my thoughts in my mind when I study about Yocto/OpenEmbedded on one of projects
Design the system with High Available solution in mind. That is: We ensure the system is designed and operated with dual power supplies. Power if possible we should use N+1 System diagram is on the way We need to have an integrated solution in mind. For example one vehicle view may not be assisted the total solution when combining with many vehicle views (vehicle ~ tank or vehicle ~ boat/ship etc&amp;hellip;i.</description>
    </item>
    
    <item>
      <title>Bitbucket</title>
      <link>https://henrynguyenattheitservice.github.io/homelab/bitbucket/bitbucket/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/homelab/bitbucket/bitbucket/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dns</title>
      <link>https://henrynguyenattheitservice.github.io/homelab/dns/dns/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/homelab/dns/dns/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gitlabserver</title>
      <link>https://henrynguyenattheitservice.github.io/homelab/gitslaberver/gitlabserver/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/homelab/gitslaberver/gitlabserver/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gitserver</title>
      <link>https://henrynguyenattheitservice.github.io/homelab/gitserver/gitserver/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/homelab/gitserver/gitserver/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Homelab</title>
      <link>https://henrynguyenattheitservice.github.io/homelab/homelab/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/homelab/homelab/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Homelab Skill (draft)</title>
      <link>https://henrynguyenattheitservice.github.io/posts/homelab-skill/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/homelab-skill/</guid>
      <description>[My Home Lab] # We setup the Development Environment for homelab.
On the internet facing we allow for the following traffic to transport to and from internet:
Mail - POP/POPS, IMAP/IMAPS, SMTP/SMTPS Leshan - Bootstrap and Device Management Web - HTTP/HTTPS Bastion Host - SSH/SFTP Github via SSH and HTTPS Next Cloud -TBD Code Control Service
Git Server GitLab Server Bitbuck Server JIRA Server DNS Service
Bind9 Mail Service</description>
    </item>
    
    <item>
      <title>Jira</title>
      <link>https://henrynguyenattheitservice.github.io/homelab/jira/jira/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/homelab/jira/jira/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mailserver</title>
      <link>https://henrynguyenattheitservice.github.io/homelab/mailserver/mailserver/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/homelab/mailserver/mailserver/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Nextcloud</title>
      <link>https://henrynguyenattheitservice.github.io/homelab/nextcloud/nextcloud/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/homelab/nextcloud/nextcloud/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Website</title>
      <link>https://henrynguyenattheitservice.github.io/homelab/website/website/</link>
      <pubDate>Wed, 17 May 2023 15:55:22 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/homelab/website/website/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hugo Skill (draft)</title>
      <link>https://henrynguyenattheitservice.github.io/posts/hugo-skill/</link>
      <pubDate>Wed, 17 May 2023 15:45:24 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/hugo-skill/</guid>
      <description>Study # Training courses that I have studied and learned in the Github, Linkedin, Udemy, and Youtube; I also setup the Development Environment for hugo.
The objective of the study is to
Set up the tool set used for the hugo Development Set up the tool set used to maintain, operate and administer my website and other projects Set up the development environment to use docker and kubernetes whenever possible thus allowing an integration from Development, Testing, Pre-Production and Production.</description>
    </item>
    
    <item>
      <title>Golang Skill (draft)</title>
      <link>https://henrynguyenattheitservice.github.io/posts/golang-skill/</link>
      <pubDate>Tue, 16 May 2023 16:21:26 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/golang-skill/</guid>
      <description>GitHub Referece
Development Environment # The Golang Development Environment is setup as follows:
We use GoLand as the primary Integrated Development Environment tool.
GoLand with Git Servers: to connect to Git Server,GitLab Server, Bitbucket and Github GoLand with Git: to manage Code Control - Local and Remote Git activities. GoLand Debug: to debug and learn everything about Golang GoLand Remote Debug: to remote debug to diagnose code issues and defects in the integration GoLand and Docker Desktop as an Integrated Development Environment: to create the development environment using Docker and Kubernetes e.</description>
    </item>
    
    <item>
      <title>3 Holy Trinities (draft)</title>
      <link>https://henrynguyenattheitservice.github.io/posts/3-holy-trinities/</link>
      <pubDate>Tue, 16 May 2023 14:30:31 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/3-holy-trinities/</guid>
      <description>The term “three holy trinities” can refer to different concepts depending on the context. One possible meaning is the Christian doctrine of the Trinity, which is the belief that God is one being in three persons: Father, Son, and Holy Spirit. My software development doctrine is based on the “three holy trinities” of Architecture, Data to Information Modelling, and Methodology.
Architecture defines how all components interact through well-defined protocols. Data to Information Modelling describes the data or information used or produced by the components.</description>
    </item>
    
    <item>
      <title>Home (draft)</title>
      <link>https://henrynguyenattheitservice.github.io/posts/home/</link>
      <pubDate>Tue, 16 May 2023 14:30:31 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/posts/home/</guid>
      <description>Here are the summary of the solution and standards for CoAP, LwM2M and IPSO:
Solution &amp;amp; Standard to Support CoAP # Device and Protocol to work in a constraint environment – CoAP Constraint of Application Protocol
Protocol operates s constraint resources, e.g. Power devices run using battery or Transmit data in an Intermittent and narrow band. CoAP protocol is a Restful-like API with Restful response code Operate in various protocol stacks, UDP/DTLS, TCP/TLS and Websocket, SMS and MQTT Message encodes/decoded and transported between devices using CBOR Concise Binary Object, Text, TLV, JSON Solution and Standard to support LwM2M # Device Communication with its Management System – LwM2M Light Weight Machine to Machine Protocol – engineered on the “wisdom” of machine to machine interface</description>
    </item>
    
    <item>
      <title>Profile</title>
      <link>https://henrynguyenattheitservice.github.io/about/</link>
      <pubDate>Tue, 16 May 2023 11:41:52 +1000</pubDate>
      
      <guid>https://henrynguyenattheitservice.github.io/about/</guid>
      <description>Please note that I am in the process to consolidate my study, working knowledge and/or wisdom into my blog as at last 3 decades I have rushed from company to another and from one project to another to deliver the outcomes.
It might take some time for me to complete the blog with old and new articles.
Thank you for visiting my blog and your understanding.
Personal Details # Website: https://theitservice.</description>
    </item>
    
  </channel>
</rss>
